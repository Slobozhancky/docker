<?php

/**
 * require_once CONFIG . '/routes.php'; - це шлях до файлу, який збергіає масив зі шляхами нашого роутеру
 */
require_once CONFIG . '/routes.php';

/**
 * trim($_SERVER['REQUEST_URI'], '/'); - це й запис про те, що при вказуванні адреси, в строчці URL вона нам буде показувати інфо, на якій ми зараз знаходимось сторінці
 * якщо ти не розумієш про що ссаме мова, то виведи за допомогою dd() та подивись що повернуться
 * А функція trim() просто обріще слеші, щоб нам сручніше було робити перевірку того, яка саме у нас адреса була введена
 *
 * Метод parse_url, розбиває наш URL запит на частини, щоб це зрозуміти, видеди dd(parse_url($_SERVER['REQUEST_URI']))
 * Та ми це робимо для того, щоб взяти властивість path, для виводу шляху до нашої сторінки
 *
 * Окрім того, що ми вирішили проблему з отриманням назви сторінки на якій ми знаходимось, в змінній path
 * Ми ще маючи такий запис як у файлі .docker/php/default.conf, а саме RewriteRule ^(.*)$ index.php [L,QSA]
 * Будемо пристиковувати GET параметри, до нашого шляху [path], не отримуючи помилку 404
 *
 * ПС, якщо нічого не зрозумів, передивись відео https://youtu.be/DBHUv-I8tQ0?si=AINNFLqy-0SPOlej
 */

$uri = trim(parse_url($_SERVER['REQUEST_URI'])['path'], '/');

/**
 * Тут все просто, функція array_key_exists - перевіряє наявність ключа в нашому масиві $routes
 * Ключ ми отримуємо зі змінної $uri
 * Та якщо такий ключ в масиві є, будемо викликати його значення
 * У разі його відсутності, викличемо помилку 404, за допомогою функції aboard()
 */
if (array_key_exists($uri, $routes)){
    require_once CONTROLLERS . "/{$routes[$uri]}";
} else {

    /**
     * @method aboard
     * http_response_code - має повернути бразеру помлку, у разі того, якщо сторінка не знайдена, а не тільки вивсти її вид
     */

    aboard();
}

//if ($uri === '') {
//    require_once CONTROLLERS . '/index.php';
//} elseif ($uri == "about") {
//    require_once CONTROLLERS . '/about.php';
//} elseif ($uri == "post") {
//    dd("Show post");
//}